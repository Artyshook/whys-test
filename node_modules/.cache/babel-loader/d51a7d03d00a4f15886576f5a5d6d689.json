{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artem\\\\Documents\\\\React\\\\whys test\\\\src\\\\components\\\\Application.tsx\",\n    _s = $RefreshSig$();\n\nimport { Article } from './Article';\nimport { Box, Grid } from '@mui/material';\nimport { CommentsJSX } from '../helpers/CommentsBlock';\nimport { Toggler } from './Toggler';\nimport { motion } from 'framer-motion';\nimport { theme } from '../helpers/theme';\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { AppContext } from \"./AplicationContext\"; //\n// export type ArticleData = {\n//   author: string\n//   date: string\n//   text: string\n// }\n// export type CommentData = {\n//   id: number\n//   author: string\n//   text: string\n//   date: string\n// }\n//\n// const useLogicState = () => {\n//   const [articleData, setArticleData] = useState({} as ArticleData)\n//   const [commentData, setCommentData] = useState([] as CommentData[])\n//   const [moreCommentData, setMoreCommentData] = useState([] as CommentData[])\n//   const [darkMode, setDarkMode] = useState(false)\n//   const [loading, setLoading] = useState(false)\n//   const [inViewRef, inView] = useInView({ triggerOnce: true })\n//   const animation = useAnimation()\n//   const [loadMore, setLoadMore] = useState(false)\n//\n//   useEffect(() => {\n//     setLoading(true)\n//     setTimeout(() => {\n//       if (data) {\n//         setArticleData(data.article[0])\n//         setCommentData(data.comments)\n//         setMoreCommentData(data.moreComments)\n//         setLoading(false)\n//       }\n//     }, 1000)\n//   }, [])\n//\n//   useStartAnimation(inView, animation)\n//   useStartAnimation(loadMore, animation)\n//\n//   const handleClick = () => {\n//     setLoadMore(true)\n//   }\n//\n//   return {\n//     articleData,\n//     commentData,\n//     moreCommentData,\n//     darkMode,\n//     loading,\n//     inViewRef,\n//     animation,\n//     loadMore,\n//     handleClick,\n//     setDarkMode,\n//   }\n// }\n//\n// export const { ContextProvider: AppContextProvider, Context: AppContext } =\n//   genericHookContextBuilder(useLogicState)\n//\n// export const AppUseContext = () => {\n//   return (\n//     <AppContextProvider>\n//       <Application />\n//     </AppContextProvider>\n//   )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Application = () => {\n  _s();\n\n  const {\n    articleData,\n    commentData,\n    moreCommentData,\n    darkMode,\n    loading,\n    inViewRef,\n    animation,\n    loadMore,\n    handleClick,\n    setDarkMode\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    darkMode: darkMode,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '150vh',\n      justifyContent: 'space-between',\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Toggler, {\n          darkMode: darkMode,\n          handleClick: () => setDarkMode(!darkMode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        flexGrow: 1,\n        children: /*#__PURE__*/_jsxDEV(Article, {\n          articleData: articleData,\n          loading: loading,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: inViewRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          animate: animation,\n          children: /*#__PURE__*/_jsxDEV(CommentsJSX, {\n            data: commentData,\n            darkMode: darkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          animate: animation,\n          children: loadMore && /*#__PURE__*/_jsxDEV(CommentsJSX, {\n            data: moreCommentData,\n            darkMode: darkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        animate: animation,\n        children: /*#__PURE__*/_jsxDEV(My_Div, {\n          children: /*#__PURE__*/_jsxDEV(Button_MyButton, {\n            onClick: () => handleClick(),\n            children: \"Load More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Application, \"Yo6x3xfCcF5G1px96tWhz9F4HlA=\");\n\n_c = Application;\nconst Container = styled(Box)`\n  background-color: ${props => props.darkMode ? theme.colors.dark : theme.colors.white};\n  color: ${_ref => {\n  let {\n    darkMode\n  } = _ref;\n  return !darkMode ? theme.colors.dark : theme.colors.white;\n}};\n  transition: all 400ms;\n  i,\n  a {\n    color: ${props => props.darkMode ? theme.colors.white : theme.colors.dark};\n    transition: color 400ms;\n  }\n  a:visited {\n    color: ${props => props.darkMode ? theme.colors.white : theme.colors.dark};\n  }\n  ul {\n    list-style-type: none;\n  }\n`;\n_c2 = Container;\nexport const Button_MyButton = styled.button`\n  font-size: 1.5rem;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background-color: ${theme.colors.gray};\n  height: 4.5rem;\n  width: fit-content;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  gap: 0.5rem;\n  &:hover {\n    background: ${theme.colors.yellow};\n  }\n`;\n_c3 = Button_MyButton;\nconst My_Div = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 10px;\n`;\n_c4 = My_Div;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Application\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Button_MyButton\");\n$RefreshReg$(_c4, \"My_Div\");","map":{"version":3,"names":["Article","Box","Grid","CommentsJSX","Toggler","motion","theme","React","useContext","styled","AppContext","Application","articleData","commentData","moreCommentData","darkMode","loading","inViewRef","animation","loadMore","handleClick","setDarkMode","Container","props","colors","dark","white","Button_MyButton","button","gray","yellow","My_Div","div"],"sources":["C:/Users/Artem/Documents/React/whys test/src/components/Application.tsx"],"sourcesContent":["import { Article } from './Article'\r\nimport { Box, Grid } from '@mui/material'\r\nimport { CommentsJSX } from '../helpers/CommentsBlock'\r\nimport { Toggler } from './Toggler'\r\nimport { genericHookContextBuilder } from '../helpers/genericHookContextBuilder'\r\nimport { motion } from 'framer-motion'\r\nimport { theme } from '../helpers/theme'\r\nimport { useAnimation } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { useStartAnimation } from '../helpers/startAnimation'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport data from '../data.json'\r\nimport styled from 'styled-components'\r\nimport {AppContext} from \"./AplicationContext\";\r\n//\r\n// export type ArticleData = {\r\n//   author: string\r\n//   date: string\r\n//   text: string\r\n// }\r\n// export type CommentData = {\r\n//   id: number\r\n//   author: string\r\n//   text: string\r\n//   date: string\r\n// }\r\n//\r\n// const useLogicState = () => {\r\n//   const [articleData, setArticleData] = useState({} as ArticleData)\r\n//   const [commentData, setCommentData] = useState([] as CommentData[])\r\n//   const [moreCommentData, setMoreCommentData] = useState([] as CommentData[])\r\n//   const [darkMode, setDarkMode] = useState(false)\r\n//   const [loading, setLoading] = useState(false)\r\n//   const [inViewRef, inView] = useInView({ triggerOnce: true })\r\n//   const animation = useAnimation()\r\n//   const [loadMore, setLoadMore] = useState(false)\r\n//\r\n//   useEffect(() => {\r\n//     setLoading(true)\r\n//     setTimeout(() => {\r\n//       if (data) {\r\n//         setArticleData(data.article[0])\r\n//         setCommentData(data.comments)\r\n//         setMoreCommentData(data.moreComments)\r\n//         setLoading(false)\r\n//       }\r\n//     }, 1000)\r\n//   }, [])\r\n//\r\n//   useStartAnimation(inView, animation)\r\n//   useStartAnimation(loadMore, animation)\r\n//\r\n//   const handleClick = () => {\r\n//     setLoadMore(true)\r\n//   }\r\n//\r\n//   return {\r\n//     articleData,\r\n//     commentData,\r\n//     moreCommentData,\r\n//     darkMode,\r\n//     loading,\r\n//     inViewRef,\r\n//     animation,\r\n//     loadMore,\r\n//     handleClick,\r\n//     setDarkMode,\r\n//   }\r\n// }\r\n//\r\n// export const { ContextProvider: AppContextProvider, Context: AppContext } =\r\n//   genericHookContextBuilder(useLogicState)\r\n//\r\n// export const AppUseContext = () => {\r\n//   return (\r\n//     <AppContextProvider>\r\n//       <Application />\r\n//     </AppContextProvider>\r\n//   )\r\n// }\r\n\r\n\r\n\r\nexport const Application = () => {\r\n  const {\r\n    articleData,\r\n    commentData,\r\n    moreCommentData,\r\n    darkMode,\r\n    loading,\r\n    inViewRef,\r\n    animation,\r\n    loadMore,\r\n    handleClick,\r\n    setDarkMode,\r\n  } = useContext(AppContext)\r\n\r\n  return (\r\n    <Container darkMode={darkMode}>\r\n      <Grid\r\n        container\r\n        display={'flex'}\r\n        flexDirection={'column'}\r\n        minHeight={'150vh'}\r\n        justifyContent={'space-between'}\r\n      >\r\n        <Grid item>\r\n          <Toggler darkMode={darkMode} handleClick={() => setDarkMode(!darkMode)} />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <Article articleData={articleData} loading={loading} darkMode={darkMode} />\r\n        </Grid>\r\n        <div ref={inViewRef}></div>\r\n        <Grid>\r\n          <motion.div animate={animation}>\r\n            <CommentsJSX data={commentData} darkMode={darkMode} />\r\n          </motion.div>\r\n          <motion.div animate={animation}>\r\n            {loadMore && <CommentsJSX data={moreCommentData} darkMode={darkMode} />}\r\n          </motion.div>\r\n        </Grid>\r\n        <motion.div animate={animation}>\r\n          <My_Div>\r\n            <Button_MyButton onClick={() => handleClick()}>Load More</Button_MyButton>\r\n          </My_Div>\r\n        </motion.div>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled(Box)<{ darkMode: boolean }>`\r\n  background-color: ${props => (props.darkMode ? theme.colors.dark : theme.colors.white)};\r\n  color: ${({ darkMode }) => (!darkMode ? theme.colors.dark : theme.colors.white)};\r\n  transition: all 400ms;\r\n  i,\r\n  a {\r\n    color: ${props => (props.darkMode ? theme.colors.white : theme.colors.dark)};\r\n    transition: color 400ms;\r\n  }\r\n  a:visited {\r\n    color: ${props => (props.darkMode ? theme.colors.white : theme.colors.dark)};\r\n  }\r\n  ul {\r\n    list-style-type: none;\r\n  }\r\n`\r\nexport const Button_MyButton = styled.button`\r\n  font-size: 1.5rem;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: white;\r\n  background-color: ${theme.colors.gray};\r\n  height: 4.5rem;\r\n  width: fit-content;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 5px;\r\n  gap: 0.5rem;\r\n  &:hover {\r\n    background: ${theme.colors.yellow};\r\n  }\r\n`\r\n\r\nconst My_Div = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 10px;\r\n`\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}